# - name: Map in DNS "{{ item.value.app_fqdn }}" to IP "{{ item.value.app_locations.prod_vip_address }}"
#   nios_host_record:
#     name: "{{item.value.app_fqdn}}"
#     ipv4:
#       - address: "{{ item.value.app_locations.prod_vip_address }}"
#     state: present
#     provider: "{{nios_provider}}"
#   with_dict: "{{ apps }}"
#   loop_control:
#     label: "{{item.key}}"

- name: Map in DNS "{{ item.value.app_fqdn }}" to IP "{{ item.value.app_locations.prod_vip_address }}"
  nios_a_record:
    name: "{{item.value.app_fqdn}}"
    ipv4: "{{ item.value.app_locations.prod_vip_address }}"
    state: present
    provider: "{{nios_provider}}"
  with_dict: "{{ apps }}"
  loop_control:
    label: "{{item.key}}"
  when: not upgrade

- name: Map in DNS "{{ item.value.app_fqdn }}" to IP "{{ item.value.app_locations.alternate_vip_address }}"
  nios_a_record:
    name: "{{item.value.app_fqdn}}"
    ipv4: "{{ item.value.app_locations.alternate_vip_address }}"
    state: present
    provider: "{{nios_provider}}"
  with_dict: "{{ apps }}"
  loop_control:
    label: "{{item.key}}"
  when: upgrade and test_success

- name: Removing the Map in DNS "{{ item.value.app_fqdn }}" to IP "{{ item.value.app_locations.prod_vip_address }}"
  nios_a_record:
    name: "{{item.value.app_fqdn}}"
    ipv4: "{{ item.value.app_locations.prod_vip_address }}"
    state: absent
    provider: "{{nios_provider}}"
  with_dict: "{{ apps }}"
  loop_control:
    label: "{{item.key}}"
  when: upgrade and test_success
